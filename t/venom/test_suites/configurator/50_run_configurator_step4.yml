name: Restart services
testcases:
- name: restart_packetfence_config_service
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/configurator/system_service/packetfence-config/restart'
    ignore_verify_ssl: true
    headers:
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.message ShouldEqual "Service has been restarted"

- name: restart_pfqueue_service
  steps:
  - type: systemctl_service_restart
    service: packetfence-redis_queue        
        
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/configurator/system_service/packetfence-pfqueue/restart'
    ignore_verify_ssl: true
    headers:
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.message ShouldEqual "Service has been restarted"

- name: update_systemd
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/configurator/service/pf/update_systemd'
    ignore_verify_ssl: true
    headers:
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.message ShouldEqual "Updated systemd for pf"

# service restarted by hand because using API cause Venom failure (EOF)
- name: restart_haproxy_admin_service
  steps:
  - type: exec
    script: systemctl restart packetfence-haproxy-admin

# to apply changes made during custom step
# no API call usable
- name: restart_pfperl_api_service
  steps:
  - type: exec
    script: systemctl restart packetfence-pfperl-api

# let haproxy-admin and pfperl-api to restart before going further
- name: sleep_some_time
  steps:
  - type: exec
    script: sleep 10

- name: start_pf_services
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/configurator/service/pf/start'
    ignore_verify_ssl: true
    body: >-
      {
        "async": true
      }
    headers:
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 202
    vars:
      task_id:
        from: result.bodyjson.task_id

- name: test_pf_services_started
  steps:
  - type: http
    method: GET
    url: '{{.pfserver_webadmin_url}}/api/v1/configurator/pfqueue/task/{{.start_pf_services.task_id}}/status/poll'
    ignore_verify_ssl: true
    headers:
      "Authorization": "{{.get_login_token.result.token}}"
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.message ShouldEqual Completed
      - result.bodyjson.progress ShouldEqual 100
      - result.bodyjson.status ShouldEqual 200
    # wait ten minutes before failing
    retry: 10
    delay: 60
